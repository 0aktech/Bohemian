---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by brode.
--- DateTime: 07.02.2022 17:45
---

local _, E = ...

table.toString = function(t)
    local tableStr = {}
    for k,v in pairs(t) do
        table.insert(tableStr, k.."="..v)
    end
    return table.concat(tableStr, ",")
end

table.fromString = function(str)
    local data = { strsplit(",", str) }
    local t = {}
    for _, item in ipairs(data) do
        local k, v = strsplit("=", item)
        t[k] = v
    end
    return t
end

table.deepCopy = function(orig)
    local orig_type = type(orig)
    local copy
    if orig_type == 'table' then
        copy = {}
        for orig_key, orig_value in next, orig, nil do
            copy[self:deepCopy(orig_key)] = self:deepCopy(orig_value)
        end
        setmetatable(copy, self:deepCopy(getmetatable(orig)))
    else -- number, string, boolean, etc
        copy = orig
    end
    return copy
end

table.removeNil = function(t)
    local tmp = {}
    for _,v in pairs(t) do
        tmp[ #tmp+1 ] = v
    end
    return tmp
end

table.slice = function(tbl, first, last, step)
    local sliced = {}

    for i = first or 1, last or #tbl, step or 1 do
        sliced[#sliced+1] = tbl[i]
    end

    return sliced
end
